<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LAPTOP-M7E66H8V" ignored="0" name="Surefire test" tests="3" failures="0" timestamp="2021-05-01T16:51:13 IST" time="4.32" errors="0">
  <testcase name="@BeforeClass BC" time="4.19" classname="Maven_May.MayMAven.Test_1">
    <failure type="org.openqa.selenium.WebDriverException" message="unknown error: cannot find Chrome binary
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;LAPTOP-M7E66H8V&amp;apos;, ip: &amp;apos;192.168.43.69&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_144&amp;apos;
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
	Ordinal0 [0x00C5C013+2474003]
	Ordinal0 [0x00BF29C1+2042305]
	Ordinal0 [0x00B02F68+1060712]
	Ordinal0 [0x00B1C626+1164838]
	Ordinal0 [0x00B1AA83+1157763]
	Ordinal0 [0x00B4A2A2+1352354]
	Ordinal0 [0x00B48FAA+1347498]
	Ordinal0 [0x00B466DB+1337051]
	Ordinal0 [0x00B23427+1192999]
	Ordinal0 [0x00B242EE+1196782]
	Ordinal0 [0x00B24279+1196665]
	GetHandleVerifier [0x00DE96FC+1590332]
	GetHandleVerifier [0x00E98614+2306900]
	GetHandleVerifier [0x00CE9E93+543699]
	GetHandleVerifier [0x00CE92CE+540686]
	Ordinal0 [0x00BF86BA+2066106]
	Ordinal0 [0x00BFD1C8+2085320]
	Ordinal0 [0x00BFD308+2085640]
	Ordinal0 [0x00C067F3+2123763]
	BaseThreadInitThunk [0x76E9FA29+25]
	RtlGetAppContainerNamedObjectPath [0x77447A4E+286]
	RtlGetAppContainerNamedObjectPath [0x77447A1E+238]
">
      <![CDATA[org.openqa.selenium.WebDriverException: unknown error: cannot find Chrome binary
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-M7E66H8V', ip: '192.168.43.69', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_144'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
Ordinal0 [0x00C5C013+2474003]
Ordinal0 [0x00BF29C1+2042305]
Ordinal0 [0x00B02F68+1060712]
Ordinal0 [0x00B1C626+1164838]
Ordinal0 [0x00B1AA83+1157763]
Ordinal0 [0x00B4A2A2+1352354]
Ordinal0 [0x00B48FAA+1347498]
Ordinal0 [0x00B466DB+1337051]
Ordinal0 [0x00B23427+1192999]
Ordinal0 [0x00B242EE+1196782]
Ordinal0 [0x00B24279+1196665]
GetHandleVerifier [0x00DE96FC+1590332]
GetHandleVerifier [0x00E98614+2306900]
GetHandleVerifier [0x00CE9E93+543699]
GetHandleVerifier [0x00CE92CE+540686]
Ordinal0 [0x00BF86BA+2066106]
Ordinal0 [0x00BFD1C8+2085320]
Ordinal0 [0x00BFD308+2085640]
Ordinal0 [0x00C067F3+2123763]
BaseThreadInitThunk [0x76E9FA29+25]
RtlGetAppContainerNamedObjectPath [0x77447A4E+286]
RtlGetAppContainerNamedObjectPath [0x77447A1E+238]

at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)
at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)
at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)
at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
at Maven_May.MayMAven.Class2.main(Class2.java:16)
at Maven_May.MayMAven.Test_1.BC(Test_1.java:19)
at java.util.ArrayList.forEach(ArrayList.java:1249)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass BC -->
  <testcase name="@BeforeMethod BM" time="-1.619868073214E9" classname="Maven_May.MayMAven.Test_1">
    <skipped/>
  </testcase> <!-- @BeforeMethod BM -->
  <testcase name="@AfterMethod AM" time="-1.619868073219E9" classname="Maven_May.MayMAven.Test_1">
    <skipped/>
  </testcase> <!-- @AfterMethod AM -->
  <testcase name="@BeforeMethod BM" time="-1.61986807322E9" classname="Maven_May.MayMAven.Test_1">
    <skipped/>
  </testcase> <!-- @BeforeMethod BM -->
  <testcase name="@AfterMethod AM" time="-1.619868073222E9" classname="Maven_May.MayMAven.Test_1">
    <skipped/>
  </testcase> <!-- @AfterMethod AM -->
  <testcase name="@BeforeMethod BM" time="-1.619868073223E9" classname="Maven_May.MayMAven.Test_1">
    <skipped/>
  </testcase> <!-- @BeforeMethod BM -->
  <testcase name="@AfterMethod AM" time="-1.619868073224E9" classname="Maven_May.MayMAven.Test_1">
    <skipped/>
  </testcase> <!-- @AfterMethod AM -->
  <testcase name="@AfterClass AC" time="-1.619868073225E9" classname="Maven_May.MayMAven.Test_1">
    <skipped/>
  </testcase> <!-- @AfterClass AC -->
  <testcase name="@AfterTest AT" time="-1.619868073228E9" classname="Maven_May.MayMAven.Test_1">
    <skipped/>
  </testcase> <!-- @AfterTest AT -->
  <testcase name="main" time="0.0" classname="Maven_May.MayMAven.Class2">
    <skipped/>
  </testcase> <!-- main -->
  <testcase name="Test1" time="0.0" classname="Maven_May.MayMAven.Test_1">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase name="Test2" time="0.0" classname="Maven_May.MayMAven.Test_1">
    <skipped/>
  </testcase> <!-- Test2 -->
</testsuite> <!-- Surefire test -->
